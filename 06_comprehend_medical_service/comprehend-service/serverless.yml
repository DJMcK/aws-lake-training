service: comprehend-service

frameworkVersion: ">=1.49.0"

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: ${opt:region, 'us-east-1'}
  memorySize: 3008
  timeout: 900
  reservedConcurrency: 1
  deploymentBucket:
    name: jr-comprehend           # TODO replace bucket name
  deploymentPrefix: deploy-${self:service}
  environment:
    bucket_name: jr-comprehend     # TODO replace bucket name
  # profile: training06

  iamRoleStatements:
    - Effect: "Allow"
      Action: "states:StartExecution"
      Resource: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:stateMachine:comprehendStateMachine"

    - Effect: "Allow"
      Action: s3:*
      Resource:
        - "arn:aws:s3:::jr-comprehend/*"    # TODO replace bucket name
        - "arn:aws:s3:::jr-comprehend"      # TODO replace bucket name
        - "arn:aws:s3:::djm-landing"             # TODO point to landing bucket
        - "arn:aws:s3:::djm-landing/fda-product-indications/*"   # TODO point to landing bucket
        - "arn:aws:s3:::djm-curated"                             # TODO point to curated bucket
        - "arn:aws:s3:::djm-curated/fda-product-indications/*"   # TODO point to curated bucket
        - "arn:aws:s3:::djm-curated/*"                           # TODO point to curated bucket

    - Effect: "Allow"
      Action:
        - comprehendmedical:DetectEntities
        - comprehendmedical:DetectPHI
      Resource:
        - "*"

    - Effect: "Allow"
      Action:
        - athena:*
      Resource:
        - "*"

    - Effect: "Allow"
      Action:
        - glue:GetTable
        - glue:GetPartitions
        - glue:GetDatabase
      Resource:
        - "*"

    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/aws/lambda/*:*:*"

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters


package:
  exclude:
    - __pycache__/**
    - node_modules/**
    - tests/**
    - env/**
    - package.json
    - package-lock.json
    - .vscode

functions:
  proxy:
    handler: proxy.handler
    environment:
      statemachine_arn: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:stateMachine:comprehendStateMachine"

  queryAthena:
    handler: query_athena.handler

  configureCount:
    handler: configure_count.handler
    environment:
      comprehend_chunksize: 500
    layers:
      - arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python36-SciPy1x:2                  # numpy layer
      - arn:aws:lambda:us-east-1:990712811979:layer:pandas-xlrd-layer-Python36-Pandas23x:2        # pandas layer

  iterator:
    handler: iterator.handler

  callComprehendAndWriteToLanding:
    handler: call_comprehend.handler
    environment:
      comprehend_output_bucket_name: djm-landing     # TODO replace bucket name
    layers:
      - arn:aws:lambda:us-east-1:990712811979:layer:boto3layer:2                                  # boto3 layer
      - arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python36-SciPy1x:2                  # numpy layer
      - arn:aws:lambda:us-east-1:990712811979:layer:pandas-xlrd-layer-Python36-Pandas23x:2        # pandas layer

stepFunctions:
  stateMachines:
    comprehendStateMachine:
      name: comprehendStateMachine
      definition:
        Comment: "Comprehend Tutorial state machine"
        StartAt: QueryAthena
        States:
          QueryAthena:
            Comment: "Queries Athena for indications"
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-queryAthena"
            ResultPath: "$.data_node.query_results"
            Next: ConfigureCount
          ConfigureCount:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-configureCount"
            ResultPath: "$.iterator"
            Next: Iterator
          Iterator:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-iterator"
            ResultPath: "$.iterator"
            Next: IsRecordCountReached
          IsRecordCountReached:
            Type: Choice
            Choices:
              - Variable: "$.iterator.continue_iterating"
                BooleanEquals: True
                Next: CallComprehendAndWriteToLanding
              - Variable: "$.iterator.continue_iterating"
                BooleanEquals: False
                Next: IterationComplete
          CallComprehendAndWriteToLanding:
            Comment: "Calls comprehend to extract entities"
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-callComprehendAndWriteToLanding"
            ResultPath: "$.iterator"
            Next: Iterator
          IterationComplete:
            Type: Pass
            Next: Done
          Done:
            Type: Pass
            End: true


resources:

  Outputs:
    ComprehendStateMachine:
      Description: ARN of ComprehendStateMachine
      Value:
        Ref: ComprehendStateMachine
